<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="io.spike.mapper.OrderMapper">
    <resultMap id="BaseResultMap" type="io.spike.domain.Order">
        <result column="order_id" property="orderId" jdbcType="BIGINT" />
        <result column="user_id" property="userId" jdbcType="BIGINT" />
        <result column="goods_id" property="goodsId" jdbcType="BIGINT" />
        <result column="status" property="status" jdbcType="TINYINT" />
        <result column="money" property="money" jdbcType="DECIMAL" />
        <result column="create_time_normal" property="createTime" jdbcType="VARCHAR" />
        <result column="update_time_normal" property="updateTime" jdbcType="VARCHAR" />
    </resultMap>

    <resultMap id="orderDetailMap" type="io.spike.dto.OrderDetail">
        <result column="order_id" property="orderId" jdbcType="BIGINT" />
        <result column="name" property="name" jdbcType="VARCHAR" />
        <result column="money" property="money" jdbcType="DECIMAL" />
        <result column="status" property="status" jdbcType="TINYINT" />
        <result column="username" property="username" jdbcType="VARCHAR" />
        <result column="phone" property="phone" jdbcType="VARCHAR" />
        <result column="create_time_normal" property="createTime" jdbcType="VARCHAR" />
    </resultMap>

    <select id="listOrdersByUserId" resultMap="BaseResultMap" parameterType="java.lang.Long">
        SELECT order_id, user_id, goods_id,
        CASE status WHEN 0 THEN '交易中' WHEN 1 THEN '交易成功' WHEN 2 THEN '交易取消' END status,
        money,
        DATE_FORMAT(FROM_UNIXTIME(create_time), '%Y-%m-%d') create_time_normal,
        DATE_FORMAT(FROM_UNIXTIME(update_time), '%Y-%m-%d') update_time_normal
        FROM t_order
        WHERE user_id = #{userId, jdbcType = BIGINT}
    </select>

    <select id="getOrderById" resultMap="BaseResultMap" parameterType="java.lang.Long">
        SELECT order_id, user_id, goods_id,
        CASE status WHEN 0 THEN '交易中' WHEN 1 THEN '交易成功' WHEN 2 THEN '交易取消' END status,
        money,
        DATE_FORMAT(FROM_UNIXTIME(create_time), '%Y-%m-%d') create_time_normal,
        DATE_FORMAT(FROM_UNIXTIME(update_time), '%Y-%m-%d') update_time_normal
        FROM t_order
        WHERE order_id = #{orderId, jdbcType = BIGINT}
    </select>

    <select id="getOrderIdByUserIdAndGoodsId" resultType="java.lang.Long">
        SELECT order_id
        FROM t_order
        WHERE user_id = #{userId, jdbcType = BIGINT} AND goods_id = #{goodsId, jdbcType = BIGINT}
    </select>

    <insert id="saveOrder">
        INSERT INTO t_order
        (user_id, goods_id, money, create_time, update_time)
        VALUES
        (#{userId, jdbcType = BIGINT},
        #{goodsId, jdbcType = BIGINT},
        #{money, jdbcType = DECIMAL},
        UNIX_TIMESTAMP(NOW()),
        UNIX_TIMESTAMP(NOW()))
    </insert>

    <select id="getOrderDetailById" resultMap="orderDetailMap" parameterType="java.lang.Long">
        select
        o.order_id,
        g.name,
        o.money,
        case o.status when 0 then '交易中' when 1 then '交易成功' when 2 then '交易取消' end status,
        u.username,
        u.phone,
        from_unixtime(o.create_time, '%Y-%m-%d %H:%i:%s') create_time_normal
        from t_order o inner join t_goods g on o.goods_id = g.goods_id
        inner join t_user u on g.user_id = u.user_id
        where order_id = #{orderId, jdbcType = BIGINT}
    </select>

    <update id="updateStatusById">
        UPDATE t_order SET
        status = #{status, jdbcType=TINYINT},
        update_time = UNIX_TIMESTAMP(NOW())
        WHERE order_id = #{orderId, jdbcType=BIGINT}
    </update>

    <select id="getGoodsIdByOrderId" resultType="java.lang.Long" parameterType="java.lang.Long">
        SELECT goods_id
        FROM t_order
        WHERE order_id = #{orderId, jdbcType=BIGINT}
    </select>

    <select id="listOrdersWithGoodsNameByUserId" resultMap="orderDetailMap" parameterType="java.lang.Long">
        select
        o.order_id,
        g.name,
        o.money,
        case o.status when 0 then '交易中' when 1 then '交易成功' when 2 then '交易取消' end status,
        u.username,
        u.phone,
        from_unixtime(o.create_time, '%Y-%m-%d %H:%i:%s') create_time_normal
        from t_order o inner join t_goods g on o.goods_id = g.goods_id
        inner join t_user u on g.user_id = u.user_id
        where o.user_id = #{userId, jdbcType = BIGINT}
    </select>

</mapper>
