<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="io.spike.mapper.UserMapper">
    <resultMap id="BaseResultMap" type="io.spike.domain.User">
        <result column="user_id" property="userId" jdbcType="BIGINT" />
        <result column="username" property="username" jdbcType="VARCHAR" />
        <result column="password" property="password" jdbcType="VARCHAR" />
        <result column="real_name" property="realName" jdbcType="VARCHAR" />
        <result column="phone" property="phone" jdbcType="VARCHAR" />
        <result column="address" property="address" jdbcType="VARCHAR" />
        <result column="user_type" property="userType" jdbcType="VARCHAR" />
        <result column="create_time_normal" property="createTime" jdbcType="VARCHAR" />
        <result column="update_time_normal" property="updateTime" jdbcType="VARCHAR" />
    </resultMap>

    <select id="getUserByPhone" resultMap="BaseResultMap" parameterType="java.lang.String">
        SELECT user_id, username, password, real_name, phone, address
        FROM t_user
        WHERE phone = #{phone, jdbcType = VARCHAR}
    </select>

    <insert id="saveUser" parameterType="io.spike.domain.User">
        INSERT INTO t_user
        (username, password, real_name, phone, address, create_time, update_time)
        VALUES
        (#{username, jdbcType = VARCHAR},
        #{password, jdbcType = VARCHAR},
        #{realName, jdbcType = VARCHAR},
        #{phone, jdbcType = VARCHAR},
        #{address, jdbcType = VARCHAR},
        UNIX_TIMESTAMP(NOW()),
        UNIX_TIMESTAMP(NOW()))
    </insert>

    <update id="updateUserByUserId" parameterType="io.spike.domain.User" >
        UPDATE t_user SET
        username = #{username, jdbcType=VARCHAR},
        password = #{password, jdbcType=VARCHAR},
        real_name = #{realName, jdbcType=VARCHAR},
        phone = #{phone, jdbcType=VARCHAR},
        address = #{address, jdbcType=VARCHAR},
        update_time = UNIX_TIMESTAMP(NOW())
        WHERE user_id = #{userId, jdbcType=INTEGER}
    </update>

    <delete id="removeUserByUserId" parameterType="java.lang.Integer" >
        DELETE FROM t_user
        where user_id = #{userId, jdbcType=VARCHAR}
    </delete>

    <select id="listUsers" resultMap="BaseResultMap">
        SELECT user_id, username, password, real_name, phone, address,
        CASE user_type WHEN 0 THEN '普通会员' WHEN 1 THEN '管理员' END,
        DATE_FORMAT(FROM_UNIXTIME(create_time), '%Y-%m-%d') create_time_normal,
        DATE_FORMAT(FROM_UNIXTIME(update_time), '%Y-%m-%d') update_time_normal
        FROM t_user
        ORDER BY create_time, update_time
    </select>

</mapper>
